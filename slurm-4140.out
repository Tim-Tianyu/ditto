Selected optimization level O2:  FP16 training with FP32 batchnorm and FP32 master weights.

Defaults for this optimization level are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : dynamic
Processing user overrides (additional kwargs that are not None)...
After processing overrides, optimization options are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : dynamic
Warning:  multi_tensor_applier fused unscale kernel is unavailable, possibly because apex was installed without --cuda_ext --cpp_ext. Using Python fallback.  Original ImportError was: ModuleNotFoundError("No module named 'amp_C'")
Gradient overflow.  Skipping step, loss scaler 0 reducing loss scale to 32768.0
=====sanity check======
words: COL Beer_Name VAL Buffalo Trace Bourbon Barrel Aged Amber Ale COL Brew_Factory_Name VAL Wolf Hills Brewing Company COL Style VAL American / Red COL ABV VAL -   [SEP] COL Beer_Name VAL Ballast Point Calico Amber Ale - Rum Barrel Aged COL Brew_Factory_Name VAL Brewing Company COL Style VAL COL ABV VAL 5 %  
x: [  101  8902  5404  1035  2171 11748  6901  7637 15477  8460  4793  8994
 15669  8902 24702  1035  4713  1035  2171 11748  4702  4564 16005  2194
  8902  2806 11748  2137  1013  2417  8902 11113   102  8902  5404  1035
  2171 11748 28030  2391 10250 11261  8994 15669  1011 19379  8460  4793
  8902 24702  1035  4713  1035  2171 11748 16005  2194  8902  2806 11748
  8902 11113  2615   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'buffalo', 'trace', 'bourbon', 'barrel', 'aged', 'amber', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'wolf', 'hills', 'brewing', 'company', 'col', 'style', 'val', 'american', '/', 'red', 'col', 'ab', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'ballast', 'point', 'cal', '##ico', 'amber', 'ale', '-', 'rum', 'barrel', 'aged', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'company', 'col', 'style', 'val', 'col', 'ab', '##v', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.7013434171676636
Gradient overflow.  Skipping step, loss scaler 0 reducing loss scale to 16384.0
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
/w/246/tianyu2020/miniconda2/envs/ditto/lib/python3.7/site-packages/apex/amp/_initialize.py:24: UserWarning: An input tensor was not cuda.
  warnings.warn("An input tensor was not cuda.")
/w/246/tianyu2020/miniconda2/envs/ditto/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:122: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  "https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate", UserWarning)
/w/246/tianyu2020/miniconda2/envs/ditto/lib/python3.7/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
=====sanity check======
words: COL Beer_Name VAL Molly American Red Ale COL Brew_Factory_Name VAL New Helvetia Brewing Company COL Style VAL Amber / COL ABV VAL 5.00 %   [SEP] COL Beer_Name VAL Big Time Lift Ticket American Red Ale COL Brew_Factory_Name VAL Brewery COL Style VAL India Pale &#40; IPA &#41; COL ABV VAL 7 %  
x: [  101  8902  5404  1035  2171 11748  9618  2137  2417 15669  8902 24702
  1035  4713  1035  2171 11748  2047  2002  2140 19510  2401 16005  2194
  8902  2806 11748  8994  1013  8902 11113  2615   102  8902  5404  1035
  2171 11748  2502  2051  6336  7281  2137  2417 15669  8902 24702  1035
  4713  1035  2171 11748 12161  8902  2806 11748  2634  5122  1004  1001
  2871  1025 24531   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'molly', 'american', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'new', 'he', '##l', '##vet', '##ia', 'brewing', 'company', 'col', 'style', 'val', 'amber', '/', 'col', 'ab', '##v', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'big', 'time', 'lift', 'ticket', 'american', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewery', 'col', 'style', 'val', 'india', 'pale', '&', '#', '40', ';', 'ipa', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.6364355683326721
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Double Red Ale COL Brew_Factory_Name VAL The Seven Barrel Brewery COL Style VAL American Amber / COL ABV VAL 8.20 %   [SEP] COL Beer_Name VAL Midnight Sun Unite Double Red Hot Ale &#40; 2015 &#41; COL Brew_Factory_Name VAL Brewing Company COL Style VAL Amber COL ABV VAL 7.50 %  
x: [  101  8902  5404  1035  2171 11748  3313  2417 15669  8902 24702  1035
  4713  1035  2171 11748  1996  2698  8460 12161  8902  2806 11748  2137
  8994  1013  8902 11113  2615 11748  1022  1012   102  8902  5404  1035
  2171 11748  7090  3103 15908  3313  2417  2980 15669  1004  1001  2871
  1025  2325  1004  1001  4601  1025  8902 24702  1035  4713  1035  2171
 11748 16005  2194   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'double', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'the', 'seven', 'barrel', 'brewery', 'col', 'style', 'val', 'american', 'amber', '/', 'col', 'ab', '##v', 'val', '8', '.', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'midnight', 'sun', 'unite', 'double', 'red', 'hot', 'ale', '&', '#', '40', ';', '2015', '&', '#', '41', ';', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'company', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.38588353991508484
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Street Cred India Rye Red Ale COL Brew_Factory_Name VAL Roaring Fork Beer Company COL Style VAL American Amber / COL ABV VAL 7.20 %   [SEP] COL Beer_Name VAL Good People Stepchild Belgian India Red Ale COL Brew_Factory_Name VAL Brewing Company COL Style VAL Pale &#40; IPA &#41; COL ABV VAL 7.80 %  
x: [  101  8902  5404  1035  2171 11748  2395 13675  2098  2634 20926  2417
 15669  8902 24702  1035  4713  1035  2171 11748 17197  9292  5404  2194
  8902  2806 11748  2137  8994  1013  8902 11113   102  8902  5404  1035
  2171 11748  2204  2111  3357 19339  6995  2634  2417 15669  8902 24702
  1035  4713  1035  2171 11748 16005  2194  8902  2806 11748  5122  1004
  1001  2871  1025   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'street', 'cr', '##ed', 'india', 'rye', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'roaring', 'fork', 'beer', 'company', 'col', 'style', 'val', 'american', 'amber', '/', 'col', 'ab', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'good', 'people', 'step', '##child', 'belgian', 'india', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'company', 'col', 'style', 'val', 'pale', '&', '#', '40', ';', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.42862001061439514
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Oatmeal Amber Ale COL Brew_Factory_Name VAL Ornery Beer Company Public House COL Style VAL American / Red COL ABV VAL 5.70 %   [SEP] COL Beer_Name VAL John Harvards Oatmeal Amber Ale COL Brew_Factory_Name VAL Harvard_s Brewhouse &#40; Corporate Office &#41; COL Style VAL COL ABV VAL 6.50 %  
x: [  101  8902  5404  1035  2171 11748  1051  4017  4168  2389  8994 15669
  8902 24702  1035  4713  1035  2171 11748  2030 27415  5404  2194  2270
  2160  8902  2806 11748  2137  1013  2417  8902   102  8902  5404  1035
  2171 11748  2198  5765  2015  1051  4017  4168  2389  8994 15669  8902
 24702  1035  4713  1035  2171 11748  5765  1035  1055 24702  4580  1004
  1001  2871  1025   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'o', '##at', '##me', '##al', 'amber', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'or', '##nery', 'beer', 'company', 'public', 'house', 'col', 'style', 'val', 'american', '/', 'red', 'col', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'john', 'harvard', '##s', 'o', '##at', '##me', '##al', 'amber', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'harvard', '_', 's', 'brew', '##house', '&', '#', '40', ';', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 1
tags: 1
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.4760669767856598
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Red-oric - Beer Camp # 65 ( Best Of : Imperial Red Ale ) COL Brew_Factory_Name VAL Sierra Nevada Brewing Co. . COL Style VAL American Amber / COL ABV VAL 8.00 %   [SEP] COL Beer_Name VAL Peter Bs Sum Of Hours Imperial Red Ale COL Brew_Factory_Name VAL Brewpub COL Style VAL American Strong COL ABV VAL 9.50 %  
x: [  101  8902  5404  1035  2171 11748  2417  1011  2030  2594  1011  5404
  3409  1001  3515  1006  2190  1997  1024  4461  2417 15669  1007  8902
 24702  1035  4713  1035  2171 11748  7838  7756   102  8902  5404  1035
  2171 11748  2848 18667  7680  1997  2847  4461  2417 15669  8902 24702
  1035  4713  1035  2171 11748 24702 14289  2497  8902  2806 11748  2137
  2844  8902 11113   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'red', '-', 'or', '##ic', '-', 'beer', 'camp', '#', '65', '(', 'best', 'of', ':', 'imperial', 'red', 'ale', ')', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'sierra', 'nevada', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'peter', 'bs', 'sum', 'of', 'hours', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brew', '##pu', '##b', 'col', 'style', 'val', 'american', 'strong', 'col', 'ab', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.4584570527076721
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Neudorf Red Ale COL Brew_Factory_Name VAL Brasserie Bendorf COL Style VAL American Amber / COL ABV VAL -   [SEP] COL Beer_Name VAL Bendorf Neudorf Red Ale COL Brew_Factory_Name VAL COL Style VAL Irish COL ABV VAL 6 %  
x: [  101  8902  5404  1035  2171 11748 11265  6784 16347  2417 15669  8902
 24702  1035  4713  1035  2171 11748  8782 17378  8815 16347  8902  2806
 11748  2137  8994  1013  8902 11113  2615 11748  1011   102  8902  5404
  1035  2171 11748  8815 16347 11265  6784 16347  2417 15669  8902 24702
  1035  4713  1035  2171 11748  8902  2806 11748  3493  8902 11113  2615
 11748  1020  1003   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'ne', '##ud', '##orf', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brass', '##erie', 'bend', '##orf', 'col', 'style', 'val', 'american', 'amber', '/', 'col', 'ab', '##v', 'val', '-', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'bend', '##orf', 'ne', '##ud', '##orf', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'col', 'style', 'val', 'irish', 'col', 'ab', '##v', 'val', '6', '%', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 1
tags: 1
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.3583458662033081
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Sledgehammer Imperial Red Ale COL Brew_Factory_Name VAL Cambridge Brewing Company COL Style VAL American Amber / COL ABV VAL 7.75 %   [SEP] COL Beer_Name VAL Edge Imperial Red Ale &#40; Spring Seasonal &#41; COL Brew_Factory_Name VAL Brewing Company COL Style VAL American Strong COL ABV VAL 8.50 %  
x: [  101  8902  5404  1035  2171 11748 22889 24225 19742  4461  2417 15669
  8902 24702  1035  4713  1035  2171 11748  4729 16005  2194  8902  2806
 11748  2137  8994  1013  8902 11113  2615 11748   102  8902  5404  1035
  2171 11748  3341  4461  2417 15669  1004  1001  2871  1025  3500 12348
  1004  1001  4601  1025  8902 24702  1035  4713  1035  2171 11748 16005
  2194  8902  2806   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'sl', '##edge', '##hammer', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'cambridge', 'brewing', 'company', 'col', 'style', 'val', 'american', 'amber', '/', 'col', 'ab', '##v', 'val', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'edge', 'imperial', 'red', 'ale', '&', '#', '40', ';', 'spring', 'seasonal', '&', '#', '41', ';', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'company', 'col', 'style', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.2912030518054962
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Eruption Imperial Red Ale COL Brew_Factory_Name VAL Worthy Brewing Co. . COL Style VAL American Amber / COL ABV VAL 8.00 %   [SEP] COL Beer_Name VAL De Koninck TSTBRW 01 Imperial Red Ale COL Brew_Factory_Name VAL Brouwerij &#40; Duvel-Moortgat &#41; COL Style VAL American Strong COL ABV VAL 7.80 %  
x: [  101  8902  5404  1035  2171 11748 17259  4461  2417 15669  8902 24702
  1035  4713  1035  2171 11748 11007 16005  2522  1012  1012  8902  2806
 11748  2137  8994  1013  8902 11113  2615 11748   102  8902  5404  1035
  2171 11748  2139 12849 11483  3600 24529  2102 19892  2860  5890  4461
  2417 15669  8902 24702  1035  4713  1035  2171 11748 22953 25974 11124
  3501  1004  1001   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'eruption', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'worthy', 'brewing', 'co', '.', '.', 'col', 'style', 'val', 'american', 'amber', '/', 'col', 'ab', '##v', 'val', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'de', 'ko', '##nin', '##ck', 'ts', '##t', '##br', '##w', '01', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'bro', '##uw', '##eri', '##j', '&', '#', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.405769944190979
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Bulleit Bourbon Barrel Aged G'Knight COL Brew_Factory_Name VAL Oskar Blues Grill & Brew COL Style VAL American Amber / Red Ale COL ABV VAL 8.70 %   [SEP] COL Beer_Name VAL MadTree Bourbon Barrel Aged Happy Amber COL Brew_Factory_Name VAL Brewing Company COL Style VAL Ale COL ABV VAL 6 %  
x: [  101  8902  5404  1035  2171 11748  7087 20175 15477  8460  4793  1043
  1005  5000  8902 24702  1035  4713  1035  2171 11748 28626  5132 18651
  1004 24702  8902  2806 11748  2137  8994  1013   102  8902  5404  1035
  2171 11748  5506 13334 15477  8460  4793  3407  8994  8902 24702  1035
  4713  1035  2171 11748 16005  2194  8902  2806 11748 15669  8902 11113
  2615 11748  1020   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'bull', '##eit', 'bourbon', 'barrel', 'aged', 'g', "'", 'knight', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'oskar', 'blues', 'grill', '&', 'brew', 'col', 'style', 'val', 'american', 'amber', '/', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'mad', '##tree', 'bourbon', 'barrel', 'aged', 'happy', 'amber', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'company', 'col', 'style', 'val', 'ale', 'col', 'ab', '##v', 'val', '6', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.31613147258758545
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Arthur 's Imperial Red Ale COL Brew_Factory_Name VAL Otto Pub and Brewery COL Style VAL American Amber / COL ABV VAL 6.90 %   [SEP] COL Beer_Name VAL Two Brothers Revelry Imperial Red Ale COL Brew_Factory_Name VAL Brewing Company COL Style VAL American Strong COL ABV VAL 9.50 %  
x: [  101  8902  5404  1035  2171 11748  4300  1005  1055  4461  2417 15669
  8902 24702  1035  4713  1035  2171 11748  8064  9047  1998 12161  8902
  2806 11748  2137  8994  1013  8902 11113  2615   102  8902  5404  1035
  2171 11748  2048  3428  7065  2884  2854  4461  2417 15669  8902 24702
  1035  4713  1035  2171 11748 16005  2194  8902  2806 11748  2137  2844
  8902 11113  2615   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'arthur', "'", 's', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'otto', 'pub', 'and', 'brewery', 'col', 'style', 'val', 'american', 'amber', '/', 'col', 'ab', '##v', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'two', 'brothers', 'rev', '##el', '##ry', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'company', 'col', 'style', 'val', 'american', 'strong', 'col', 'ab', '##v', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.3061051666736603
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Double Dread Imperial Red Ale COL Brew_Factory_Name VAL Mad River Brewing Company COL Style VAL American Amber / COL ABV VAL 8.60 %   [SEP] COL Beer_Name VAL Scuttlebutt Mateo Loco Imperial Red Ale COL Brew_Factory_Name VAL Brewing Co. . COL Style VAL American Strong COL ABV VAL 7.10 %  
x: [  101  8902  5404  1035  2171 11748  3313 14436  4461  2417 15669  8902
 24702  1035  4713  1035  2171 11748  5506  2314 16005  2194  8902  2806
 11748  2137  8994  1013  8902 11113  2615 11748   102  8902  5404  1035
  2171 11748  8040  4904  9286  8569  4779 19327 28046  4461  2417 15669
  8902 24702  1035  4713  1035  2171 11748 16005  2522  1012  1012  8902
  2806 11748  2137   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'double', 'dread', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'mad', 'river', 'brewing', 'company', 'col', 'style', 'val', 'american', 'amber', '/', 'col', 'ab', '##v', 'val', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'sc', '##ut', '##tle', '##bu', '##tt', 'mateo', 'loco', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'co', '.', '.', 'col', 'style', 'val', 'american', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.1895277053117752
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.945
precision=0.846
recall=0.786
f1=0.815
======================================
Test:
=============Structured/Beer==================
accuracy=0.703
precision=0.118
recall=0.143
f1=0.129
======================================
=====sanity check======
words: COL Beer_Name VAL Rhino Chaser Imperial Red Ale COL Brew_Factory_Name VAL Pizza Port Solana Beach COL Style VAL American Amber / COL ABV VAL 9.50 %   [SEP] COL Beer_Name VAL Lagunitas Imperial Red Ale COL Brew_Factory_Name VAL Brewing Company &#40; Heineken &#41; COL Style VAL American Strong COL ABV VAL 7.80 %  
x: [  101  8902  5404  1035  2171 11748 24091  5252  2099  4461  2417 15669
  8902 24702  1035  4713  1035  2171 11748 10733  3417 14017  5162  3509
  8902  2806 11748  2137  8994  1013  8902 11113   102  8902  5404  1035
  2171 11748  2474 12734 24317  4461  2417 15669  8902 24702  1035  4713
  1035  2171 11748 16005  2194  1004  1001  2871  1025  2002  3170  7520
  1004  1001  4601   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'rhino', 'chase', '##r', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'pizza', 'port', 'sol', '##ana', 'beach', 'col', 'style', 'val', 'american', 'amber', '/', 'col', 'ab', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'la', '##gun', '##itas', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'company', '&', '#', '40', ';', 'he', '##ine', '##ken', '&', '#', '41', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.07847829908132553
=========eval at epoch=2=========
Validation:
=============Structured/Beer==================
accuracy=0.945
precision=0.765
recall=0.929
f1=0.839
======================================
Test:
=============Structured/Beer==================
accuracy=0.571
precision=0.209
recall=0.643
f1=0.316
======================================
=====sanity check======
words: COL Beer_Name VAL Red Rose Amber Ale COL Brew_Factory_Name VAL Baird Brewing Company / Fishmarket Taproom COL Style VAL American COL ABV VAL 5.40 %   [SEP] COL Beer_Name VAL Swashbuckler Red Sea Amber Ale COL Brew_Factory_Name VAL Brewing Company COL Style VAL COL ABV VAL -  
x: [  101  8902  5404  1035  2171 11748  2417  3123  8994 15669  8902 24702
  1035  4713  1035  2171 11748 20866 16005  2194  1013  3869 20285 11112
  9954  8902  2806 11748  2137  8902 11113  2615   102  8902  5404  1035
  2171 11748 25430 11823 24204  3917  2417  2712  8994 15669  8902 24702
  1035  4713  1035  2171 11748 16005  2194  8902  2806 11748  8902 11113
  2615 11748  1011   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'red', 'rose', 'amber', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'baird', 'brewing', 'company', '/', 'fish', '##market', 'tap', '##room', 'col', 'style', 'val', 'american', 'col', 'ab', '##v', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'sw', '##ash', '##buck', '##ler', 'red', 'sea', 'amber', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'company', 'col', 'style', 'val', 'col', 'ab', '##v', 'val', '-', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.03649941086769104
=========eval at epoch=3=========
Validation:
=============Structured/Beer==================
accuracy=0.934
precision=0.900
recall=0.643
f1=0.750
======================================
Test:
=============Structured/Beer==================
accuracy=0.824
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL American Red Ale COL Brew_Factory_Name VAL Rock Art Brewery COL Style VAL Amber / COL ABV VAL 4.80 %   [SEP] COL Beer_Name VAL Americas American Red Ale COL Brew_Factory_Name VAL Brewpub COL Style VAL Amber COL ABV VAL -  
x: [  101  8902  5404  1035  2171 11748  2137  2417 15669  8902 24702  1035
  4713  1035  2171 11748  2600  2396 12161  8902  2806 11748  8994  1013
  8902 11113  2615 11748  1018  1012  3770  1003   102  8902  5404  1035
  2171 11748 10925  2137  2417 15669  8902 24702  1035  4713  1035  2171
 11748 24702 14289  2497  8902  2806 11748  8994  8902 11113  2615 11748
  1011   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'american', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'rock', 'art', 'brewery', 'col', 'style', 'val', 'amber', '/', 'col', 'ab', '##v', 'val', '4', '.', '80', '%', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'americas', 'american', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brew', '##pu', '##b', 'col', 'style', 'val', 'amber', 'col', 'ab', '##v', 'val', '-', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 1
tags: 1
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 62
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.035457782447338104
=========eval at epoch=4=========
Validation:
=============Structured/Beer==================
accuracy=0.945
precision=0.846
recall=0.786
f1=0.815
======================================
Test:
=============Structured/Beer==================
accuracy=0.692
precision=0.281
recall=0.643
f1=0.391
======================================
=====sanity check======
words: COL Beer_Name VAL Morrisons American Red Ale COL Brew_Factory_Name VAL Titanic Brewery COL Style VAL Amber / COL ABV VAL 4.50 %   [SEP] COL Beer_Name VAL Americas American Red Ale COL Brew_Factory_Name VAL Brewpub COL Style VAL Amber COL ABV VAL -  
x: [  101  8902  5404  1035  2171 11748  9959  2015  2137  2417 15669  8902
 24702  1035  4713  1035  2171 11748 20753 12161  8902  2806 11748  8994
  1013  8902 11113  2615 11748  1018  1012  2753  1003   102  8902  5404
  1035  2171 11748 10925  2137  2417 15669  8902 24702  1035  4713  1035
  2171 11748 24702 14289  2497  8902  2806 11748  8994  8902 11113  2615
 11748  1011   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'morrison', '##s', 'american', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'titanic', 'brewery', 'col', 'style', 'val', 'amber', '/', 'col', 'ab', '##v', 'val', '4', '.', '50', '%', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'americas', 'american', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brew', '##pu', '##b', 'col', 'style', 'val', 'amber', 'col', 'ab', '##v', 'val', '-', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 63
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.015291428193449974
=========eval at epoch=5=========
Validation:
=============Structured/Beer==================
accuracy=0.956
precision=0.917
recall=0.786
f1=0.846
======================================
Test:
=============Structured/Beer==================
accuracy=0.637
precision=0.212
recall=0.500
f1=0.298
======================================
=====sanity check======
words: COL Beer_Name VAL Barrel Aged Red Ale COL Brew_Factory_Name VAL BearWaters Brewing Co. . COL Style VAL American Amber / COL ABV VAL 6.70 %   [SEP] COL Beer_Name VAL Ballast Point Calico Amber Ale - Rum Barrel Aged COL Brew_Factory_Name VAL Brewing Company COL Style VAL COL ABV VAL 5 %  
x: [  101  8902  5404  1035  2171 11748  8460  4793  2417 15669  8902 24702
  1035  4713  1035  2171 11748  4562  5880  2015 16005  2522  1012  1012
  8902  2806 11748  2137  8994  1013  8902 11113   102  8902  5404  1035
  2171 11748 28030  2391 10250 11261  8994 15669  1011 19379  8460  4793
  8902 24702  1035  4713  1035  2171 11748 16005  2194  8902  2806 11748
  8902 11113  2615   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'barrel', 'aged', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'bear', '##water', '##s', 'brewing', 'co', '.', '.', 'col', 'style', 'val', 'american', 'amber', '/', 'col', 'ab', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'ballast', 'point', 'cal', '##ico', 'amber', 'ale', '-', 'rum', 'barrel', 'aged', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'company', 'col', 'style', 'val', 'col', 'ab', '##v', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.006357461214065552
=========eval at epoch=6=========
Validation:
=============Structured/Beer==================
accuracy=0.956
precision=0.857
recall=0.857
f1=0.857
======================================
Test:
=============Structured/Beer==================
accuracy=0.769
precision=0.360
recall=0.643
f1=0.462
======================================
=====sanity check======
words: COL Beer_Name VAL Red Dragon Smoked Amber Ale COL Brew_Factory_Name VAL Hoppy Brewing Co. . COL Style VAL American / COL ABV VAL 5.50 %   [SEP] COL Beer_Name VAL Baird Smoked Amber Ale COL Brew_Factory_Name VAL Brewing Co. . COL Style VAL COL ABV VAL -  
x: [  101  8902  5404  1035  2171 11748  2417  5202 20482  8994 15669  8902
 24702  1035  4713  1035  2171 11748  6154  7685 16005  2522  1012  1012
  8902  2806 11748  2137  1013  8902 11113  2615 11748  1019   102  8902
  5404  1035  2171 11748 20866 20482  8994 15669  8902 24702  1035  4713
  1035  2171 11748 16005  2522  1012  1012  8902  2806 11748  8902 11113
  2615 11748  1011   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'red', 'dragon', 'smoked', 'amber', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'hop', '##py', 'brewing', 'co', '.', '.', 'col', 'style', 'val', 'american', '/', 'col', 'ab', '##v', 'val', '5', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'baird', 'smoked', 'amber', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'co', '.', '.', 'col', 'style', 'val', 'col', 'ab', '##v', 'val', '-', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.005301736295223236
=========eval at epoch=7=========
Validation:
=============Structured/Beer==================
accuracy=0.956
precision=0.857
recall=0.857
f1=0.857
======================================
Test:
=============Structured/Beer==================
accuracy=0.604
precision=0.107
recall=0.214
f1=0.143
======================================
=====sanity check======
words: COL Beer_Name VAL Sledgehammer Imperial Red Ale COL Brew_Factory_Name VAL Cambridge Brewing Company COL Style VAL American Amber / COL ABV VAL 7.75 %   [SEP] COL Beer_Name VAL Anacapa Riptide Imperial Red Ale COL Brew_Factory_Name VAL Brewing Company COL Style VAL American Strong COL ABV VAL 8 %  
x: [  101  8902  5404  1035  2171 11748 22889 24225 19742  4461  2417 15669
  8902 24702  1035  4713  1035  2171 11748  4729 16005  2194  8902  2806
 11748  2137  8994  1013  8902 11113  2615 11748   102  8902  5404  1035
  2171 11748  9617 17695  2050 10973  3775  3207  4461  2417 15669  8902
 24702  1035  4713  1035  2171 11748 16005  2194  8902  2806 11748  2137
  2844  8902 11113   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'sl', '##edge', '##hammer', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'cambridge', 'brewing', 'company', 'col', 'style', 'val', 'american', 'amber', '/', 'col', 'ab', '##v', 'val', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'ana', '##cap', '##a', 'rip', '##ti', '##de', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'company', 'col', 'style', 'val', 'american', 'strong', 'col', 'ab', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.0025527644902467728
=========eval at epoch=8=========
Validation:
=============Structured/Beer==================
accuracy=0.956
precision=0.857
recall=0.857
f1=0.857
======================================
Test:
Traceback (most recent call last):
  File "train_ditto.py", line 93, in <module>
    run_tag)
  File "Snippext_public/snippext/baseline.py", line 174, in initialize_and_train
    run_tag)
  File "Snippext_public/snippext/train_util.py", line 255, in eval_on_task
    t_acc, t_prec, t_recall, t_f1, t_loss = eval_classifier(model, test_iter, threshold=th)
  File "Snippext_public/snippext/train_util.py", line 104, in eval_classifier
    for i, batch in enumerate(iterator):
  File "/w/246/tianyu2020/miniconda2/envs/ditto/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 345, in __next__
    data = self._next_data()
  File "/w/246/tianyu2020/miniconda2/envs/ditto/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 385, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/w/246/tianyu2020/miniconda2/envs/ditto/lib/python3.7/site-packages/torch/utils/data/_utils/fetch.py", line 44, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/w/246/tianyu2020/miniconda2/envs/ditto/lib/python3.7/site-packages/torch/utils/data/_utils/fetch.py", line 44, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/w/246/tianyu2020/ditto/ditto/dataset.py", line 131, in __getitem__
    words = self.augmenter.augment_sent(words, "type_error", typing_error_rate=self.typing_error)
  File "/w/246/tianyu2020/ditto/ditto/augment.py", line 239, in augment_sent
    tokens, labels = self.augment(tokens, labels, op=op, typing_error_rate=typing_error_rate)
  File "/w/246/tianyu2020/ditto/ditto/augment.py", line 51, in augment
    new_tokens.append(messer.addTypingError(tokens[idx]))
  File "/w/246/tianyu2020/ditto/ditto/typingerror.py", line 109, in addTypingError
    return self.substitution(word)
  File "/w/246/tianyu2020/ditto/ditto/typingerror.py", line 84, in substitution
    c = KBMatrix[word[idx].lower()].pickOne()
KeyError: 'ã'
