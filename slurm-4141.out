Selected optimization level O2:  FP16 training with FP32 batchnorm and FP32 master weights.

Defaults for this optimization level are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : dynamic
Processing user overrides (additional kwargs that are not None)...
After processing overrides, optimization options are:
enabled                : True
opt_level              : O2
cast_model_type        : torch.float16
patch_torch_functions  : False
keep_batchnorm_fp32    : True
master_weights         : True
loss_scale             : dynamic
Warning:  multi_tensor_applier fused unscale kernel is unavailable, possibly because apex was installed without --cuda_ext --cpp_ext. Using Python fallback.  Original ImportError was: ModuleNotFoundError("No module named 'amp_C'")
Gradient overflow.  Skipping step, loss scaler 0 reducing loss scale to 32768.0
=====sanity check======
words: COL Beer_Name VAL Starlord 's Mixtape / Groot Drank Imperial Red Ale COL Brew_Factory_Name VAL Charging Hippo Brewing Co. . COL Style VAL American Amber COL ABV VAL 8.20 %   [SEP] COL Beer_Name VAL Iron Horse Fresh Hop Imperial Red Ale COL Brew_Factory_Name VAL Brewery COL Style VAL American Strong COL ABV VAL -  
x: [  101  8902  5404  1035  2171 11748  2732 19980  1005  1055 18713  1013
 24665 17206 10749  4461  2417 15669  8902 24702  1035  4713  1035  2171
 11748 13003  5099  6873 16005  2522  1012  1012   102  8902  5404  1035
  2171 11748  3707  3586  4840  6154  4461  2417 15669  8902 24702  1035
  4713  1035  2171 11748 12161  8902  2806 11748  2137  2844  8902 11113
  2615 11748  1011   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'star', '##lord', "'", 's', 'mixtape', '/', 'gr', '##oot', 'drank', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'charging', 'hip', '##po', 'brewing', 'co', '.', '.', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'iron', 'horse', 'fresh', 'hop', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewery', 'col', 'style', 'val', 'american', 'strong', 'col', 'ab', '##v', 'val', '-', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.7144509553909302
Gradient overflow.  Skipping step, loss scaler 0 reducing loss scale to 16384.0
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
/w/246/tianyu2020/miniconda2/envs/ditto/lib/python3.7/site-packages/apex/amp/_initialize.py:24: UserWarning: An input tensor was not cuda.
  warnings.warn("An input tensor was not cuda.")
/w/246/tianyu2020/miniconda2/envs/ditto/lib/python3.7/site-packages/torch/optim/lr_scheduler.py:122: UserWarning: Detected call of `lr_scheduler.step()` before `optimizer.step()`. In PyTorch 1.1.0 and later, you should call them in the opposite order: `optimizer.step()` before `lr_scheduler.step()`.  Failure to do this will result in PyTorch skipping the first value of the learning rate schedule. See more details at https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate
  "https://pytorch.org/docs/stable/optim.html#how-to-adjust-learning-rate", UserWarning)
/w/246/tianyu2020/miniconda2/envs/ditto/lib/python3.7/site-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
=====sanity check======
words: COL Beer_Name VAL Lavery Imperial Red Ale COL Brew_Factory_Name VAL Brewing Company COL Style VAL American Amber / COL ABV VAL 8.20 %   [SEP] COL Beer_Name VAL Oak Creek King Crimson Imperial Red Ale COL Brew_Factory_Name VAL Brewing Co. . COL Style VAL American Strong COL ABV VAL 9.50 %  
x: [  101  8902  5404  1035  2171 11748  2474 27900  4461  2417 15669  8902
 24702  1035  4713  1035  2171 11748 16005  2194  8902  2806 11748  2137
  8994  1013  8902 11113  2615 11748  1022  1012   102  8902  5404  1035
  2171 11748  6116  3636  2332 11466  4461  2417 15669  8902 24702  1035
  4713  1035  2171 11748 16005  2522  1012  1012  8902  2806 11748  2137
  2844  8902 11113   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'la', '##very', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'company', 'col', 'style', 'val', 'american', 'amber', '/', 'col', 'ab', '##v', 'val', '8', '.', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'oak', 'creek', 'king', 'crimson', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'co', '.', '.', 'col', 'style', 'val', 'american', 'strong', 'col', 'ab', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.6369147300720215
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Bourbon Barrel Ro Shampo Imperial Red Ale COL Brew_Factory_Name VAL Figure 8 Brewing COL Style VAL American Amber / COL ABV VAL -   [SEP] COL Beer_Name VAL Spring House Atomic Raygun Imperial Red Ale COL Brew_Factory_Name VAL Brewing Company COL Style VAL American Strong COL ABV VAL 8.30 %  
x: [  101  8902  5404  1035  2171 11748 15477  8460 20996 25850  6873  4461
  2417 15669  8902 24702  1035  4713  1035  2171 11748  3275  1022 16005
  8902  2806 11748  2137  8994  1013  8902 11113   102  8902  5404  1035
  2171 11748  3500  2160  9593  4097 12734  4461  2417 15669  8902 24702
  1035  4713  1035  2171 11748 16005  2194  8902  2806 11748  2137  2844
  8902 11113  2615   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'bourbon', 'barrel', 'ro', 'sham', '##po', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'figure', '8', 'brewing', 'col', 'style', 'val', 'american', 'amber', '/', 'col', 'ab', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'spring', 'house', 'atomic', 'ray', '##gun', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'company', 'col', 'style', 'val', 'american', 'strong', 'col', 'ab', '##v', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.47443434596061707
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Fullers Traitors ' Gate COL Brew_Factory_Name VAL Fuller Smith & Turner PLC COL Style VAL American Amber / Red Ale COL ABV VAL 4.50 %   [SEP] COL Beer_Name VAL Fuller_s Traitor_s Gate COL Brew_Factory_Name VAL COL Style VAL Bitter COL ABV VAL 4.50 %  
x: [  101  8902  5404  1035  2171 11748 12548  2015 17328  2015  1005  4796
  8902 24702  1035  4713  1035  2171 11748 12548  3044  1004  6769 15492
  8902  2806 11748  2137  8994  1013  2417 15669   102  8902  5404  1035
  2171 11748 12548  1035  1055 17328  1035  1055  4796  8902 24702  1035
  4713  1035  2171 11748  8902  2806 11748  8618  8902 11113  2615 11748
  1018  1012  2753   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'fuller', '##s', 'traitor', '##s', "'", 'gate', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'fuller', 'smith', '&', 'turner', 'plc', 'col', 'style', 'val', 'american', 'amber', '/', 'red', 'ale', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'fuller', '_', 's', 'traitor', '_', 's', 'gate', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'col', 'style', 'val', 'bitter', 'col', 'ab', '##v', 'val', '4', '.', '50', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 1
tags: 1
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.3175544738769531
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Frost Quake Bourbon Barrel Aged Barley Wine COL Brew_Factory_Name VAL Wellington County Brewery COL Style VAL American Barleywine COL ABV VAL 9.80 %   [SEP] COL Beer_Name VAL Hangar 24 Barrel Roll No. 04 : Hammerhead - Bourbon Aged with Chai Tea COL Brew_Factory_Name VAL Craft Brewery COL Style VAL Barley Wine COL ABV VAL 13.90 %  
x: [  101  8902  5404  1035  2171 11748 10097 27785 15477  8460  4793 21569
  4511  8902 24702  1035  4713  1035  2171 11748  8409  2221 12161  8902
  2806 11748  2137 21569 21924  8902 11113  2615   102  8902  5404  1035
  2171 11748 18284  2484  8460  4897  2053  1012  5840  1024  8691  4974
  1011 15477  4793  2007 15775  2072  5572  8902 24702  1035  4713  1035
  2171 11748  7477   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'frost', 'quake', 'bourbon', 'barrel', 'aged', 'barley', 'wine', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'wellington', 'county', 'brewery', 'col', 'style', 'val', 'american', 'barley', '##wine', 'col', 'ab', '##v', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'hangar', '24', 'barrel', 'roll', 'no', '.', '04', ':', 'hammer', '##head', '-', 'bourbon', 'aged', 'with', 'cha', '##i', 'tea', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'craft', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.3803248703479767
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Eruption Imperial Red Ale COL Brew_Factory_Name VAL Worthy Brewing Co. . COL Style VAL American Amber / COL ABV VAL 8.00 %   [SEP] COL Beer_Name VAL Three Heads Buffalo Soul Jah Imperial Red Ale COL Brew_Factory_Name VAL Custom Brewcrafters COL Style VAL American Strong COL ABV VAL 9.20 %  
x: [  101  8902  5404  1035  2171 11748 17259  4461  2417 15669  8902 24702
  1035  4713  1035  2171 11748 11007 16005  2522  1012  1012  8902  2806
 11748  2137  8994  1013  8902 11113  2615 11748   102  8902  5404  1035
  2171 11748  2093  4641  6901  3969 14855  2232  4461  2417 15669  8902
 24702  1035  4713  1035  2171 11748  7661 24702 10419  2545  8902  2806
 11748  2137  2844   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'eruption', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'worthy', 'brewing', 'co', '.', '.', 'col', 'style', 'val', 'american', 'amber', '/', 'col', 'ab', '##v', 'val', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'three', 'heads', 'buffalo', 'soul', 'ja', '##h', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'custom', 'brew', '##craft', '##ers', 'col', 'style', 'val', 'american', 'strong', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.3847423791885376
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL 5 Star Amber Ale COL Brew_Factory_Name VAL The Civil Life Brewing Company COL Style VAL American / Red COL ABV VAL 5.00 %   [SEP] COL Beer_Name VAL Blue Star Apache Amber Ale COL Brew_Factory_Name VAL Brewing Co. . COL Style VAL COL ABV VAL -  
x: [  101  8902  5404  1035  2171 11748  1019  2732  8994 15669  8902 24702
  1035  4713  1035  2171 11748  1996  2942  2166 16005  2194  8902  2806
 11748  2137  1013  2417  8902 11113  2615 11748  1019   102  8902  5404
  1035  2171 11748  2630  2732 15895  8994 15669  8902 24702  1035  4713
  1035  2171 11748 16005  2522  1012  1012  8902  2806 11748  8902 11113
  2615 11748  1011   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', '5', 'star', 'amber', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'the', 'civil', 'life', 'brewing', 'company', 'col', 'style', 'val', 'american', '/', 'red', 'col', 'ab', '##v', 'val', '5', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'blue', 'star', 'apache', 'amber', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'co', '.', '.', 'col', 'style', 'val', 'col', 'ab', '##v', 'val', '-', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.27520501613616943
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Fisherman 's Tea Party COL Brew_Factory_Name VAL Cape Ann Brewing Company COL Style VAL American Barleywine COL ABV VAL 9.00 %   [SEP] COL Beer_Name VAL Cape Ann Fisherman_s Tea Party COL Brew_Factory_Name VAL Brewing Company COL Style VAL Barley Wine COL ABV VAL 9 %  
x: [  101  8902  5404  1035  2171 11748 19949  1005  1055  5572  2283  8902
 24702  1035  4713  1035  2171 11748  4880  5754 16005  2194  8902  2806
 11748  2137 21569 21924  8902 11113  2615 11748   102  8902  5404  1035
  2171 11748  4880  5754 19949  1035  1055  5572  2283  8902 24702  1035
  4713  1035  2171 11748 16005  2194  8902  2806 11748 21569  4511  8902
 11113  2615 11748   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'fisherman', "'", 's', 'tea', 'party', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'cape', 'ann', 'brewing', 'company', 'col', 'style', 'val', 'american', 'barley', '##wine', 'col', 'ab', '##v', 'val', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'cape', 'ann', 'fisherman', '_', 's', 'tea', 'party', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'company', 'col', 'style', 'val', 'barley', 'wine', 'col', 'ab', '##v', 'val', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 1
tags: 1
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.3806888461112976
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Double Dread Imperial Red Ale COL Brew_Factory_Name VAL Mad River Brewing Company COL Style VAL American Amber / COL ABV VAL 8.60 %   [SEP] COL Beer_Name VAL Ballast Point Tongue Buckler Imperial Red Ale COL Brew_Factory_Name VAL Brewing Company COL Style VAL American Strong COL ABV VAL 10 %  
x: [  101  8902  5404  1035  2171 11748  3313 14436  4461  2417 15669  8902
 24702  1035  4713  1035  2171 11748  5506  2314 16005  2194  8902  2806
 11748  2137  8994  1013  8902 11113  2615 11748   102  8902  5404  1035
  2171 11748 28030  2391  4416 22853  2099  4461  2417 15669  8902 24702
  1035  4713  1035  2171 11748 16005  2194  8902  2806 11748  2137  2844
  8902 11113  2615   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'double', 'dread', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'mad', 'river', 'brewing', 'company', 'col', 'style', 'val', 'american', 'amber', '/', 'col', 'ab', '##v', 'val', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'ballast', 'point', 'tongue', 'buckle', '##r', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'company', 'col', 'style', 'val', 'american', 'strong', 'col', 'ab', '##v', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.26813188195228577
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Mountian Goat Rare Breed India Red Ale COL Brew_Factory_Name VAL Mountain Beer Pty Ltd COL Style VAL American Amber / COL ABV VAL 6.60 %   [SEP] COL Beer_Name VAL Hammond River Red Coat India Ale COL Brew_Factory_Name VAL Brewing COL Style VAL Amber COL ABV VAL 6.50 %  
x: [  101  8902  5404  1035  2171 11748  4057  2937 13555  4678  8843  2634
  2417 15669  8902 24702  1035  4713  1035  2171 11748  3137  5404 13866
  2100  5183  8902  2806 11748  2137  8994  1013   102  8902  5404  1035
  2171 11748 11309  2314  2417  5435  2634 15669  8902 24702  1035  4713
  1035  2171 11748 16005  8902  2806 11748  8994  8902 11113  2615 11748
  1020  1012  2753   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'mount', '##ian', 'goat', 'rare', 'breed', 'india', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'mountain', 'beer', 'pt', '##y', 'ltd', 'col', 'style', 'val', 'american', 'amber', '/', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'hammond', 'river', 'red', 'coat', 'india', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'col', 'style', 'val', 'amber', 'col', 'ab', '##v', 'val', '6', '.', '50', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.22327235341072083
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
Test:
=============Structured/Beer==================
accuracy=0.846
precision=0.000
recall=0.000
f1=0.000
======================================
=====sanity check======
words: COL Beer_Name VAL Bourbon Barrel Aged Auld Bitch COL Brew_Factory_Name VAL Tahoe Mountain Brewing Co. . COL Style VAL American Barleywine COL ABV VAL 11.00 %   [SEP] COL Beer_Name VAL Lompoc Bourbon Barrel Aged Proletariat Red Ale COL Brew_Factory_Name VAL Brewing COL Style VAL Amber COL ABV VAL 6.40 %  
x: [  101  8902  5404  1035  2171 11748 15477  8460  4793  8740  6392  7743
  8902 24702  1035  4713  1035  2171 11748 11937 14490  3137 16005  2522
  1012  1012  8902  2806 11748  2137 21569 21924   102  8902  5404  1035
  2171 11748  8840  8737 10085 15477  8460  4793  4013  7485 10980  2102
  2417 15669  8902 24702  1035  4713  1035  2171 11748 16005  8902  2806
 11748  8994  8902   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'bourbon', 'barrel', 'aged', 'au', '##ld', 'bitch', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'ta', '##hoe', 'mountain', 'brewing', 'co', '.', '.', 'col', 'style', 'val', 'american', 'barley', '##wine', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'lo', '##mp', '##oc', 'bourbon', 'barrel', 'aged', 'pro', '##let', '##aria', '##t', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'col', 'style', 'val', 'amber', 'col', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.17177124321460724
=========eval at epoch=1=========
Validation:
=============Structured/Beer==================
accuracy=0.692
precision=0.306
recall=0.786
f1=0.440
======================================
Test:
=============Structured/Beer==================
accuracy=0.484
precision=0.133
recall=0.429
f1=0.203
======================================
=====sanity check======
words: COL Beer_Name VAL Peak Organic The Maple Collaboration COL Brew_Factory_Name VAL Brewing Company COL Style VAL American Amber / Red Ale COL ABV VAL 7.00 %   [SEP] COL Beer_Name VAL Peak Organic The Maple Collaboration COL Brew_Factory_Name VAL Shipyard Brewing Company COL Style VAL Amber Ale COL ABV VAL 6.70 %  
x: [  101  8902  5404  1035  2171 11748  4672  7554  1996 11035  5792  8902
 24702  1035  4713  1035  2171 11748 16005  2194  8902  2806 11748  2137
  8994  1013  2417 15669  8902 11113  2615 11748   102  8902  5404  1035
  2171 11748  4672  7554  1996 11035  5792  8902 24702  1035  4713  1035
  2171 11748 13858 16005  2194  8902  2806 11748  8994 15669  8902 11113
  2615 11748  1020   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'peak', 'organic', 'the', 'maple', 'collaboration', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'company', 'col', 'style', 'val', 'american', 'amber', '/', 'red', 'ale', 'col', 'ab', '##v', 'val', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'peak', 'organic', 'the', 'maple', 'collaboration', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'shipyard', 'brewing', 'company', 'col', 'style', 'val', 'amber', 'ale', 'col', 'ab', '##v', 'val', '6', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 1
tags: 1
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.16897352039813995
=========eval at epoch=2=========
Validation:
=============Structured/Beer==================
accuracy=0.923
precision=0.889
recall=0.571
f1=0.696
======================================
Test:
=============Structured/Beer==================
accuracy=0.868
precision=0.625
recall=0.357
f1=0.455
======================================
=====sanity check======
words: COL Beer_Name VAL Arthur 's Imperial Red Ale COL Brew_Factory_Name VAL Otto Pub and Brewery COL Style VAL American Amber / COL ABV VAL 6.90 %   [SEP] COL Beer_Name VAL Kinetic Infrared Imperial Red Ale COL Brew_Factory_Name VAL Brewing Company COL Style VAL American Strong COL ABV VAL 9.30 %  
x: [  101  8902  5404  1035  2171 11748  4300  1005  1055  4461  2417 15669
  8902 24702  1035  4713  1035  2171 11748  8064  9047  1998 12161  8902
  2806 11748  2137  8994  1013  8902 11113  2615   102  8902  5404  1035
  2171 11748 20504 14611  4461  2417 15669  8902 24702  1035  4713  1035
  2171 11748 16005  2194  8902  2806 11748  2137  2844  8902 11113  2615
 11748  1023  1012   102]
tokens: ['[CLS]', 'col', 'beer', '_', 'name', 'val', 'arthur', "'", 's', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'otto', 'pub', 'and', 'brewery', 'col', 'style', 'val', 'american', 'amber', '/', 'col', 'ab', '##v', '[SEP]', 'col', 'beer', '_', 'name', 'val', 'kinetic', 'infrared', 'imperial', 'red', 'ale', 'col', 'brew', '_', 'factory', '_', 'name', 'val', 'brewing', 'company', 'col', 'style', 'val', 'american', 'strong', 'col', 'ab', '##v', 'val', '9', '.', '[SEP]']
is_heads: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
y: 0
tags: 0
mask: tensor([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
        1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1])
seqlen: 64
task_name: Structured/Beer
=======================
step: 0, task: Structured/Beer, loss: 0.18841224908828735
=========eval at epoch=3=========
Validation:
=============Structured/Beer==================
accuracy=0.703
precision=0.341
recall=1.000
f1=0.509
======================================
Test:
Traceback (most recent call last):
  File "train_ditto.py", line 93, in <module>
    run_tag)
  File "Snippext_public/snippext/baseline.py", line 174, in initialize_and_train
    run_tag)
  File "Snippext_public/snippext/train_util.py", line 255, in eval_on_task
    t_acc, t_prec, t_recall, t_f1, t_loss = eval_classifier(model, test_iter, threshold=th)
  File "Snippext_public/snippext/train_util.py", line 104, in eval_classifier
    for i, batch in enumerate(iterator):
  File "/w/246/tianyu2020/miniconda2/envs/ditto/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 345, in __next__
    data = self._next_data()
  File "/w/246/tianyu2020/miniconda2/envs/ditto/lib/python3.7/site-packages/torch/utils/data/dataloader.py", line 385, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "/w/246/tianyu2020/miniconda2/envs/ditto/lib/python3.7/site-packages/torch/utils/data/_utils/fetch.py", line 44, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/w/246/tianyu2020/miniconda2/envs/ditto/lib/python3.7/site-packages/torch/utils/data/_utils/fetch.py", line 44, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/w/246/tianyu2020/ditto/ditto/dataset.py", line 131, in __getitem__
    words = self.augmenter.augment_sent(words, "type_error", typing_error_rate=self.typing_error)
  File "/w/246/tianyu2020/ditto/ditto/augment.py", line 239, in augment_sent
    tokens, labels = self.augment(tokens, labels, op=op, typing_error_rate=typing_error_rate)
  File "/w/246/tianyu2020/ditto/ditto/augment.py", line 51, in augment
    new_tokens.append(messer.addTypingError(tokens[idx]))
  File "/w/246/tianyu2020/ditto/ditto/typingerror.py", line 109, in addTypingError
    return self.substitution(word)
  File "/w/246/tianyu2020/ditto/ditto/typingerror.py", line 84, in substitution
    c = KBMatrix[word[idx].lower()].pickOne()
KeyError: 'ã'
